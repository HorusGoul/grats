/** @gqlInterface */
interface Person {
  /** @gqlField */
  name: string;
}

/** @gqlType */
// highlight-start
export class User implements Person {
  // highlight-end
  __typename: "User";
  /** @gqlField */
  name: string;
}

=== SNIP ===
interface Person {
  name: String
}

type User implements Person {
  name: String
}
=== SNIP ===
import { GraphQLSchema, GraphQLInterfaceType, GraphQLString, GraphQLObjectType } from "graphql";
const PersonType: GraphQLInterfaceType = new GraphQLInterfaceType({
    name: "Person",
    fields() {
        return {
            name: {
                name: "name",
                type: GraphQLString
            }
        };
    }
});
const UserType: GraphQLObjectType = new GraphQLObjectType({
    name: "User",
    fields() {
        return {
            name: {
                name: "name",
                type: GraphQLString
            }
        };
    },
    interfaces() {
        return [PersonType];
    }
});
const schema = new GraphQLSchema({
    types: [PersonType, UserType]
});
export { schema };
