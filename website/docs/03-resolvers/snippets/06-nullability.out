/** @gqlType */
class MyType {
  /**
   * @gqlField
   * @killsParentOnException
   */
  myField(): string {
    if (Math.random() > 0.5) {
      throw new Error("Bang");
    }
    return "Whew!";
  }
}

=== SNIP ===
type MyType {
  myField: String!
}
=== SNIP ===
import { GraphQLSchema, GraphQLObjectType, GraphQLNonNull, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const MyTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "MyType",
        fields() {
            return {
                myField: {
                    name: "myField",
                    type: new GraphQLNonNull(GraphQLString)
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [MyTypeType]
    });
}
