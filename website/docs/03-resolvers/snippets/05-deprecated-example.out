/** @gqlType */
class User {
  /**
   * @gqlField
   * @deprecated Please use myNewField instead.
   */
  oldField: string;

  /** @gqlField */
  newField: string;
}

=== SNIP ===
type User {
  newField: String
  oldField: String @deprecated(reason: "Please use myNewField instead.")
}
=== SNIP ===
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const UserType: GraphQLObjectType = new GraphQLObjectType({
        name: "User",
        fields() {
            return {
                newField: {
                    name: "newField",
                    type: GraphQLString
                },
                oldField: {
                    deprecationReason: "Please use myNewField instead.",
                    name: "oldField",
                    type: GraphQLString
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [UserType]
    });
}
