/** @gqlType */
export class User {
  name: string;

  // highlight-start
  /** @gqlField greeting */
  // highlight-end
  getGreeting(): string {
    return `Hello, ${this.name}`;
  }
}

=== SNIP ===
type User {
  greeting: String
}
=== SNIP ===
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const UserType: GraphQLObjectType = new GraphQLObjectType({
        name: "User",
        fields() {
            return {
                greeting: {
                    name: "greeting",
                    type: GraphQLString,
                    resolve(source, args, context, info) {
                        return typeof source.getGreeting === "function" ? source.getGreeting(source, args, context, info) : source.getGreeting;
                    }
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [UserType]
    });
}
