# Schema generated by Grats (https://grats.capt.dev)
# Do not manually edit. Regenerate by running `npx grats`.
# @generated
schema {
  query: Query
  subscription: Subscription
}

directive @asyncIterable on FIELD_DEFINITION

directive @exported(argCount: Int!, functionName: String!, jsModulePath: String!, tsModulePath: String!) on FIELD_DEFINITION

directive @methodName(name: String!) on FIELD_DEFINITION

type Group {
  description: String!
  members: [User!]!
  name: String!
}

interface IPerson {
  name: String!
}

type Query {
  allUsers: [User!]! @exported(jsModulePath: "examples/yoga/dist/models/User.js", tsModulePath: "examples/yoga/models/User.ts", functionName: "allUsers", argCount: 1)
  me: User! @exported(jsModulePath: "examples/yoga/dist/Query.js", tsModulePath: "examples/yoga/Query.ts", functionName: "me", argCount: 1)
  person: IPerson! @exported(jsModulePath: "examples/yoga/dist/Query.js", tsModulePath: "examples/yoga/Query.ts", functionName: "person", argCount: 1)
}

type Subscription {
  countdown(from: Int!): Int! @exported(jsModulePath: "examples/yoga/dist/Subscription.js", tsModulePath: "examples/yoga/Subscription.ts", functionName: "countdown", argCount: 2) @asyncIterable
}

type User implements IPerson {
  groups: [Group!]!
  name: String!
}