-----------------
INPUT
----------------- 
type RegularPerson {
  name: String
}

type User {
  name: String
  age: Int
}

union Person = RegularPerson | User

type Query {
  president: Person
}

-----------------
OUTPUT
-----------------
import { GraphQLSchema, GraphQLObjectType, GraphQLUnionType, GraphQLString, GraphQLInt, GraphQLInterfaceType } from "graphql";
const RegularPersonType: GraphQLObjectType = new GraphQLObjectType({
    name: "RegularPerson",
    fields() {
        return {
            name: {
                name: "name",
                type: GraphQLString
            }
        };
    }
});
const UserType: GraphQLObjectType = new GraphQLObjectType({
    name: "User",
    fields() {
        return {
            name: {
                name: "name",
                type: GraphQLString
            },
            age: {
                name: "age",
                type: GraphQLInt
            }
        };
    }
});
const PersonType: GraphQLInterfaceType = new GraphQLUnionType({
    name: "Person",
    types() {
        return [RegularPersonType, UserType];
    }
});
const QueryType: GraphQLObjectType = new GraphQLObjectType({
    name: "Query",
    fields() {
        return {
            president: {
                name: "president",
                type: PersonType
            }
        };
    }
});
const schema = new GraphQLSchema({
    query: QueryType,
    types: [RegularPersonType, UserType, PersonType, QueryType]
});
export { schema };
