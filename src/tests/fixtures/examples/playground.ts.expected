-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  me(): UserResolver {
    return new UserResolver();
  }
  /**
   * @gqlField
   * @deprecated Please use `me` instead.
   */
  viewer(): UserResolver {
    return new UserResolver();
  }
}

/**
 * A user in our kick-ass system!
 * @gqlType User
 */
class UserResolver {
  /** @gqlField */
  name: string = "Alice";

  /** @gqlField */
  greeting(args: { salutation: string }): string {
    return `${args.salutation}, ${this.name}`;
  }
}

/** @gqlField */
export function getUser(_: SomeType): UserResolver {
  return new UserResolver();
}

-----------------
OUTPUT
-----------------
directive @methodName(name: String!) on FIELD_DEFINITION

directive @exported(filename: String!, functionName: String!) on FIELD_DEFINITION

type SomeType {
  me: User
  viewer: User @deprecated(reason: "Please use `me` instead.")
  getUser: User @exported(filename: "tests/fixtures/examples/playground.js", functionName: "getUser")
}

"""A user in our kick-ass system!"""
type User {
  name: String
  greeting(salutation: String!): String
}