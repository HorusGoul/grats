-----------------
INPUT
----------------- 
/** @gqlType */
export type SomeType = unknown;

/** @gqlField */
export function greeting(_: SomeType): string {
  return "Hello world";
}

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

type SomeType {
  greeting: String @exported(tsModulePath: "grats/src/tests/fixtures/type_definitions_from_alias/AliasOfUnknownDefinesType.ts", functionName: "greeting", argCount: 1)
}
-- TypeScript --
import { greeting as someTypeGreetingResolver } from "./AliasOfUnknownDefinesType";
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
    name: "SomeType",
    fields() {
        return {
            greeting: {
                name: "greeting",
                type: GraphQLString,
                resolve(source) {
                    return someTypeGreetingResolver(source);
                }
            }
        };
    }
});
const schema = new GraphQLSchema({
    types: [SomeTypeType]
});
export { schema };
