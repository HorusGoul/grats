-----------------
INPUT
----------------- 
import { Float as LocalFloat } from "../../../Types";

/** @gqlType */
export default class SomeType {
  /** @gqlField */
  ratio(): LocalFloat {
    return 10;
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

type SomeType {
  ratio: Float
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLFloat } from "graphql";
function getSchema(): GraphQLSchema {
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                ratio: {
                    name: "ratio",
                    type: GraphQLFloat
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [SomeTypeType]
    });
}
export { getSchema };
