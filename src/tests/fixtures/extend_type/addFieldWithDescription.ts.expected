-----------------
INPUT
----------------- 
/** @gqlType */
class SomeType {
  // No fields
}

/**
 * Best field ever!
 * @gqlField
 */
export function greeting(_: SomeType): string {
  return "Hello world!";
}

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

type SomeType {
  """Best field ever!"""
  greeting: String @exported(tsModulePath: "grats/src/tests/fixtures/extend_type/addFieldWithDescription.ts", functionName: "greeting", argCount: 1)
}
-- TypeScript --
import { greeting as someTypeGreetingResolver } from "./addFieldWithDescription";
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
    name: "SomeType",
    fields() {
        return {
            greeting: {
                description: "Best field ever!",
                name: "greeting",
                type: GraphQLString,
                resolve(source) {
                    return someTypeGreetingResolver(source);
                }
            }
        };
    }
});
const schema = new GraphQLSchema({
    types: [SomeTypeType]
});
export { schema };
