-----------------
INPUT
----------------- 
/** @gqlType */
class SomeType {
  /** @gqlField */
  hello: string;
}

/** @gqlInput */
type MyInputType = {
  someField?: string;
};

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

type SomeType {
  hello: String
}

input MyInputType {
  someField: String
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLInputObjectType } from "graphql";
const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
    name: "SomeType",
    fields() {
        return {
            hello: {
                name: "hello",
                type: GraphQLString
            }
        };
    }
});
const MyInputTypeType: GraphQLInputObjectType = new GraphQLInputObjectType({
    name: "MyInputType",
    fields() {
        return {
            someField: {
                name: "someField",
                type: GraphQLString
            }
        };
    }
});
const schema = new GraphQLSchema({
    types: [SomeTypeType, MyInputTypeType]
});
export { schema };
