-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  hello(): string | void {
    return "Hello world!";
  }
  /** @gqlField */
  goodbye(): string | null {
    return "Hello world!";
  }
  /** @gqlField */
  farewell(): string | null | void | undefined {
    return "Hello world!";
  }
  /** @gqlField */
  async adieu(): Promise<string | null | void> {
    return "Hello world!";
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

type SomeType {
  hello: String
  goodbye: String
  farewell: String
  adieu: String
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
    name: "SomeType",
    fields() {
        return {
            hello: {
                name: "hello",
                type: GraphQLString
            },
            goodbye: {
                name: "goodbye",
                type: GraphQLString
            },
            farewell: {
                name: "farewell",
                type: GraphQLString
            },
            adieu: {
                name: "adieu",
                type: GraphQLString
            }
        };
    }
});
const schema = new GraphQLSchema({
    types: [SomeTypeType]
});
export { schema };
