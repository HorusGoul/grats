-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  me(): User {
    return new User();
  }
}

/** @gqlInterface */
interface Person {
  /** @gqlField */
  name: string;
}

/** @gqlInterface */
interface Actor {
  /** @gqlField */
  name: string;
}

/** @gqlType */
class User implements Person, Actor {
  __typename = "User";
  /** @gqlField */
  name: string;
}

-----------------
OUTPUT
-----------------
directive @methodName(name: String!) on FIELD_DEFINITION

directive @exported(filename: String!, functionName: String!) on FIELD_DEFINITION

type SomeType {
  me: User
}

interface Person {
  name: String
}

interface Actor {
  name: String
}

type User implements Person & Actor {
  name: String
}