-----------------
INPUT
----------------- 
import { Int } from "../../../Types";

/** @gqlInterface */
interface Mammal {
  /** @gqlField */
  legs: Int;
}

/** @gqlInterface */
export interface Person extends Mammal {
  /** @gqlField */
  name: string;

  /** @gqlField */
  legs: Int;
}

/** @gqlInterface */
export interface User extends Mammal, Person {
  __typename: "User";

  /** @gqlField */
  name: string;

  /** @gqlField */
  legs: Int;
}

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

interface Mammal {
  legs: Int
}

interface Person implements Mammal {
  name: String
  legs: Int
}

interface User implements Mammal & Person {
  name: String
  legs: Int
}
-- TypeScript --
import { GraphQLSchema, GraphQLInterfaceType, GraphQLInt, GraphQLString } from "graphql";
const MammalType: GraphQLInterfaceType = new GraphQLInterfaceType({
    name: "Mammal",
    fields() {
        return {
            legs: {
                name: "legs",
                type: GraphQLInt
            }
        };
    }
});
const PersonType: GraphQLInterfaceType = new GraphQLInterfaceType({
    name: "Person",
    fields() {
        return {
            name: {
                name: "name",
                type: GraphQLString
            },
            legs: {
                name: "legs",
                type: GraphQLInt
            }
        };
    },
    interfaces() {
        return [MammalType];
    }
});
const UserType: GraphQLInterfaceType = new GraphQLInterfaceType({
    name: "User",
    fields() {
        return {
            name: {
                name: "name",
                type: GraphQLString
            },
            legs: {
                name: "legs",
                type: GraphQLInt
            }
        };
    },
    interfaces() {
        return [MammalType, PersonType];
    }
});
const schema = new GraphQLSchema({
    types: [MammalType, PersonType, UserType]
});
export { schema };
