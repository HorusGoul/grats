-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  hello(args: {
    /** The greeting to use. */
    greeting: string;
  }): string {
    return `${args.greeting} world!`;
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

type SomeType {
  hello(
    """The greeting to use."""
    greeting: String!
  ): String
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLNonNull } from "graphql";
const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
    name: "SomeType",
    fields() {
        return {
            hello: {
                name: "hello",
                type: GraphQLString,
                args: {
                    greeting: {
                        description: "The greeting to use.",
                        name: "greeting",
                        type: new GraphQLNonNull(GraphQLString)
                    }
                }
            }
        };
    }
});
const schema = new GraphQLSchema({
    types: [SomeTypeType]
});
export { schema };
