-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  hello: MyEnum;
}

/** @gqlEnum */
type MyEnum =
  /** VALIDATED! */
  | "VALID"
  /** INVALIDATED! */
  | "INVALID";

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

directive @exportedScalar(tsModulePath: String!, exportName: String!) on SCALAR

type SomeType {
  hello: MyEnum
}

enum MyEnum {
  VALID
  INVALID
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLEnumType } from "graphql";
function getSchema(): GraphQLSchema {
    const MyEnumType: GraphQLEnumType = new GraphQLEnumType({
        name: "MyEnum",
        values: {
            VALID: {
                value: "VALID"
            },
            INVALID: {
                value: "INVALID"
            }
        }
    });
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                hello: {
                    name: "hello",
                    type: MyEnumType
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [SomeTypeType, MyEnumType]
    });
}
export { getSchema };
