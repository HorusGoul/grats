-----------------
INPUT
----------------- 
/** @gqlType */
type SomeType = {};

/** @gqlField */
export function me(_: SomeType): User {
  return { firstName: "John", lastName: "Doe" };
}

/** @gqlType */
type User = {
  /** @gqlField */
  firstName: string;
  /** @gqlField */
  lastName: string;
};

/** @gqlField */
export function fullName(user: User): string {
  return `${user.firstName} ${user.lastName}`;
}

-----------------
OUTPUT
-----------------
directive @methodName(name: String!) on FIELD_DEFINITION

directive @exported(jsModulePath: String!, tsModulePath: String!, functionName: String!) on FIELD_DEFINITION

type SomeType {
  me: User @exported(jsModulePath: "tests/fixtures/todo/userExample.js", tsModulePath: "tests/fixtures/todo/userExample.ts", functionName: "me")
}

type User {
  firstName: String
  lastName: String
  fullName: String @exported(jsModulePath: "tests/fixtures/todo/userExample.js", tsModulePath: "tests/fixtures/todo/userExample.ts", functionName: "fullName")
}