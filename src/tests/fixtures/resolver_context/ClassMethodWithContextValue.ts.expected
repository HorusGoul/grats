-----------------
INPUT
----------------- 
type GratsContext = {
  greeting: string;
};

/** @gqlType */
export class SomeType {
  /** @gqlField */
  greeting(args: unknown, ctx: GratsContext): string {
    return ctx.greeting;
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
directive @asyncIterable on FIELD_DEFINITION

directive @propertyName(name: String!) on FIELD_DEFINITION

directive @exported(tsModulePath: String!, functionName: String!, argCount: Int!) on FIELD_DEFINITION

type SomeType {
  greeting: String
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
    name: "SomeType",
    fields() {
        return {
            greeting: {
                name: "greeting",
                type: GraphQLString
            }
        };
    }
});
const schema = new GraphQLSchema({
    types: [SomeTypeType]
});
export { schema };
